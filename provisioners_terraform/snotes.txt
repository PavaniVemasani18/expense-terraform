provisioner :
=============
a new  instance created in remote hosts, install packages dynamically in current instance
to run the same provisioner,first instance destroyed and recreate the same instance,this is terraform behaviour
it won't create another resource.
if any changes in the current resource,then terraform will destroy the resource first and then recreate the same resource.
* if a provisioner fails,also instance is creating.

so to overcome the above last step decouple provisioner

1.if provisioner fails ,instance wont recreate.
now null_Resource will come into the picture
resource "null_resource" "test" {
provisioner "remote-exec" {
  connection {
    type     = "ssh"
    user     = "ec2-user"
    password = "DevOps321"
    host     = aws_instance.page.public_ip
  }
  inline = [
    "sudo dnf install nginx -y",
    "sudo systemctl start nginx"
  ]
}

}
code changes in provisoner,terraform will execute only the changed part not all
Provisioner executes again and again instead of creating of recreating a resource
